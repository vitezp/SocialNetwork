@using Castle.Core.Internal
@model SocialNetworkPL.Models.PostListModel

@{
    ViewBag.Title = "PostListView";
}

<div class="Index col-md-7">
    @{
        if (!User.Identity.IsAuthenticated)
        {
            foreach (var post in Model.Posts.Items)
            {
                if (!post.StayAnonymous)
                {
                    <div class="post-container">
                        <ul class="posts">
                            <li class="post">
                                @{var pathToImg = "../../Assets/img/girl-" + post.UserId + "-400.jpg";} 
                                <div class="profile-picture" style="background-image: url('@pathToImg')"></div>
                                <div class="content">
                                    <div>
                                        <h4>@post.NickName</h4>
                                        <small>@post.PostedAt</small>
                                    </div>
                                    <p class="message">
                                        @post.Text
                                    </p>
                                    <div class="images"></div>
                                    @{ var comments = post.Comments?.Items?.ToList();}
                                    @if (comments != null)
                                    {
                                        <ul class="comments">
                                            @foreach (var comment in comments)
                                            {
                                                <li class="comment">
                                                    @{var pathToImgComment = "../../Assets/img/girl-" + comment.UserId + "-400.jpg";} 

                                                    <div class="profile-picture" style="background-image: url('@pathToImgComment')"></div>
                                                    <div class="content">
                                                        <div>
                                                            <h4>@comment.NickName</h4>
                                                            <small>@comment.PostedAt</small>
                                                        </div>
                                                        <p class="message">
                                                            @comment.Text
                                                        </p>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </div>
                            </li>
                        </ul>
                    </div>
                }
            }
        }
        else
        {
            foreach (var post in Model.Posts.Items)
            {
                var friends = Model.AuthenticatedUser.Friends?.Where(x => x.IsAccepted && (x.User1Id == post.UserId || x.User2Id == post.UserId));
                if (!post.StayAnonymous || !friends.IsNullOrEmpty() || post.UserId == Model.AuthenticatedUser.Id)
                {
                    <div class="post-container">
                        <ul class="posts">
                            <li class="post">
                                @{var pathToImg = "../../Assets/img/girl-" + post.UserId + "-400.jpg";} 

                                <div class="profile-picture" style="background-image: url('@pathToImg')"></div>
                                <div class="content">
                                    <div>
                                        <h4>@post.NickName</h4>
                                        <small>@post.PostedAt</small>
                                    </div>
                                    <p class="message">
                                        @post.Text
                                    </p>
                                    <div class="images"></div>
                                    @{ var comments = post.Comments?.Items?.ToList();}
                                    @if (comments != null)
                                    {
                                        <ul class="comments">
                                        @foreach (var comment in comments)
                                        {
                                            <li class="comment">
                                                @{var pathToImgComment = "../../Assets/img/girl-" + comment.UserId + "-400.jpg";} 

                                                <div class="profile-picture" style="background-image: url('@pathToImgComment')"></div>
                                                <div class="content">
                                                    <div>
                                                        <h4>@comment.NickName</h4>
                                                        <small>@comment.PostedAt</small>
                                                    </div>
                                                    <p class="message">
                                                        @comment.Text
                                                    </p>
                                                </div>
                                            </li>
                                        }
                                        </ul>
                                    }
                                    <div class="send-comment">
                                        @using (Html.BeginForm("AddComment", "Home", FormMethod.Post))
                                        {
                                        <div class="search-btn">
                                            @Html.EditorFor(model => model.NewCommentText, new { htmlAttributes = new { @class = "form-control", placeholder = "Write a comment, " + Model.AuthenticatedUser.NickName}})
                                            @Html.HiddenFor(model => model.AuthenticatedUser.Id)
                                            @Html.HiddenFor(model => model.PostId, new { @Value = post.Id})

                                            <button type="submit" class="btn btn-primary">Post</button>
                                        </div>
                                        }
                                    </div>
                                </div>
                            </li>
                        </ul>
                    </div>
                }
            }
        }
    }
    <div class="more">
        @using (Html.BeginForm("Index", "Home", FormMethod.Post))
        {
            @Html.HiddenFor(model => model.PostFilter.PageSize);
            <button type="submit" class="btn btn-primary">More...</button>
        }
    </div>
</div>
<div class="col-md-4 pull-right sidebar">
    <div class="road"></div>
    <blockquote>
        <footer>Existuje mnoho variant s pasážemi Lorem Ipsum, nicméně valná většina trpí neduhy v podobě snahy o vtipný text či použití naprosto náhodných slov, což nevypadá zrovna uvěřitelně.</footer>
    </blockquote>
</div>
<div class="clearfix"></div>
