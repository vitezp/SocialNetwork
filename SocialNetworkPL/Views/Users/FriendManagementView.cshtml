@using Castle.Core.Internal
@model SocialNetworkPL.Models.FindUsersModel

@if (User.Identity.IsAuthenticated)
{
    <div class="FriendManagement">
        @using (Html.BeginForm("Index", "Users", FormMethod.Get, new { @class = "form-search" }))
        {
        <div class="form-group">

            @Html.Label("search-subname", "Find user by nickname")
            @Html.TextBox("subname", null, new
       {
           @class = "form-control",
           id = "search-subname",
           placeholder = "Enter nickname"
       })

        </div>

        <button class="btn btn-primary" type="submit">Find</button>
        }

        <table class="table">
            <thead>
                <tr>
                    <th scope="col">NickName</th>
                    <th scope="col">Action</th>
                </tr>
            </thead>
            <tbody>
                @{
                    var requestedFriendsYetNotAcceptedIds = Model.User.RequestedFriendships
                        .Where(x => !x.IsAccepted)
                        .Select(x => x.User2Id)
                        .ToList();

                    var friendsIdsWaitingForMyAcceptance = Model.User.AcceptedFriendships
                        .Where(x => !x.IsAccepted)
                        .ToList();

                    var friendsIdsIRequested = Model.User.RequestedFriendships
                        .Where(x => x.IsAccepted)
                        .Select(x => x.User2Id)
                        .ToList();
                    var friendsIdsIAccepted = Model.User.AcceptedFriendships
                        .Where(x => x.IsAccepted)
                        .Select(x => x.User1Id)
                        .ToList();
                }

                @foreach (var user in Model.Users)
                {
                    if (user.NickName != Model.User.NickName)
                    {
                        <tr>
                            <th scope="row">
                                @{ var pathToImg = "../../Assets/img/girl-" + user.Id + "-400.jpg";} 
                                <div class="profile-picture" style="background-image: url(@pathToImg)"></div>
                                @Html.ActionLink(user.NickName, "UserProfile", new {nickName = user.NickName})
                            </th>

                            <td>
                                @if (requestedFriendsYetNotAcceptedIds.Contains(user.Id))
                        {
                                    <input type="submit" value="Waiting for confirmation" class="btn btn-default" />
                                }
                                else if (!friendsIdsWaitingForMyAcceptance.Where(x => x.User1Id == user.Id).IsNullOrEmpty())
                                {
                                    var friendship = friendsIdsWaitingForMyAcceptance
                                        .Select(x => x.User1Id == user.Id)
                                        .FirstOrDefault();

                                    using (Html.BeginForm("AcceptFriend", "Users", new { friendId = user.Id }, FormMethod.Post, null))
                                    {
                                        <input type="submit" value="Accept friendship" class="btn btn-success" />
                                    }
                                }
                                else if (friendsIdsIAccepted.Contains(user.Id) || friendsIdsIRequested.Contains(user.Id))
                                {
                                    //remove friend for the future
                                    <input type="submit" value="Already friends" class="btn btn-default" />
                                }
                                else
                                {
                                    using (Html.BeginForm("AddFriend", "Users", new { id = user.Id }, FormMethod.Post, null))
                                    {
                                        <input type="submit" value="Add friend" class="btn btn-primary" />
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
                    }